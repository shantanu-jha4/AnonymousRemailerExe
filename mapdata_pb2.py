# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mapdata.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mapdata.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\rmapdata.proto\"G\n\x07wrapper\x12\x14\n\x04mapx\x18\x01 \x01(\x0b\x32\x04.mapH\x00\x12\x1a\n\x07\x66romtox\x18\x02 \x01(\x0b\x32\x07.fromtoH\x00\x42\n\n\x08message_\"6\n\x03map\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x10\n\x08latitude\x18\x02 \x01(\x02\x12\x11\n\tlongitude\x18\x03 \x01(\x02\"(\n\x06\x66romto\x12\x0f\n\x07\x66rom_ip\x18\x01 \x01(\t\x12\r\n\x05to_ip\x18\x02 \x01(\tb\x06proto3')
)




_WRAPPER = _descriptor.Descriptor(
  name='wrapper',
  full_name='wrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mapx', full_name='wrapper.mapx', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fromtox', full_name='wrapper.fromtox', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='message_', full_name='wrapper.message_',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=17,
  serialized_end=88,
)


_MAP = _descriptor.Descriptor(
  name='map',
  full_name='map',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='map.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='latitude', full_name='map.latitude', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='map.longitude', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=144,
)


_FROMTO = _descriptor.Descriptor(
  name='fromto',
  full_name='fromto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_ip', full_name='fromto.from_ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_ip', full_name='fromto.to_ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=186,
)

_WRAPPER.fields_by_name['mapx'].message_type = _MAP
_WRAPPER.fields_by_name['fromtox'].message_type = _FROMTO
_WRAPPER.oneofs_by_name['message_'].fields.append(
  _WRAPPER.fields_by_name['mapx'])
_WRAPPER.fields_by_name['mapx'].containing_oneof = _WRAPPER.oneofs_by_name['message_']
_WRAPPER.oneofs_by_name['message_'].fields.append(
  _WRAPPER.fields_by_name['fromtox'])
_WRAPPER.fields_by_name['fromtox'].containing_oneof = _WRAPPER.oneofs_by_name['message_']
DESCRIPTOR.message_types_by_name['wrapper'] = _WRAPPER
DESCRIPTOR.message_types_by_name['map'] = _MAP
DESCRIPTOR.message_types_by_name['fromto'] = _FROMTO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

wrapper = _reflection.GeneratedProtocolMessageType('wrapper', (_message.Message,), dict(
  DESCRIPTOR = _WRAPPER,
  __module__ = 'mapdata_pb2'
  # @@protoc_insertion_point(class_scope:wrapper)
  ))
_sym_db.RegisterMessage(wrapper)

map = _reflection.GeneratedProtocolMessageType('map', (_message.Message,), dict(
  DESCRIPTOR = _MAP,
  __module__ = 'mapdata_pb2'
  # @@protoc_insertion_point(class_scope:map)
  ))
_sym_db.RegisterMessage(map)

fromto = _reflection.GeneratedProtocolMessageType('fromto', (_message.Message,), dict(
  DESCRIPTOR = _FROMTO,
  __module__ = 'mapdata_pb2'
  # @@protoc_insertion_point(class_scope:fromto)
  ))
_sym_db.RegisterMessage(fromto)


# @@protoc_insertion_point(module_scope)
